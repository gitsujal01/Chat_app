package com.substring.chat.Controllers;

import java.time.LocalDateTime;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.messaging.handler.annotation.DestinationVariable;
import org.springframework.messaging.handler.annotation.MessageMapping;
import org.springframework.messaging.handler.annotation.SendTo;
import org.springframework.stereotype.Controller;

import com.substring.chat.entities.Message;
import com.substring.chat.entities.Room;
import com.substring.chat.payload.MessageRequest;
import com.substring.chat.repositories.RoomRepository;

@Controller
public class ChatController {

	@Autowired
	private RoomRepository rr;

	public ChatController(RoomRepository roomRepository)
	{
		this.rr = roomRepository;
	}
	
	//for sending and receiving messages
	@MessageMapping("/sendMessage/{roomId}")
	@SendTo("/topic/room/{roomId}")
	public Message sendMessage(@DestinationVariable("roomId") String roomId, MessageRequest request) {
	    Optional<Room> roomOpt = rr.findByRoomId(roomId);
	    if(roomOpt.isEmpty()) {
	        throw new RuntimeException("Room not found..");
	    }

	    Room room = roomOpt.get();

	    Message message = new Message();
	    message.setContent(request.getContent());
	    message.setSender(request.getSender());
	    message.setTimestamp(LocalDateTime.now());

	    room.getMessages().add(message);
	    rr.save(room);

	    return message;
	}

}
