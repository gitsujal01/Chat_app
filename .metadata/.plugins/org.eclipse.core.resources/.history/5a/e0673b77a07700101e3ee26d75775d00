package com.substring.chat.Controllers;

import java.time.LocalDateTime;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.messaging.handler.annotation.DestinationVariable;
import org.springframework.messaging.handler.annotation.MessageMapping;
import org.springframework.messaging.handler.annotation.SendTo;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;

import com.substring.chat.entities.Message;
import com.substring.chat.entities.Room;
import com.substring.chat.payload.MessageRequest;
import com.substring.chat.repositories.RoomRepository;

@Controller
public class ChatController {

	@Autowired
	private RoomRepository rr;

	public ChatController(RoomRepository roomRepository)
	{
		this.rr = roomRepository;
	}
	
	//for sending and receiving messages
	@MessageMapping("/sendMessage/{roomId}")
	@SendTo("/topic/room/{roomId}")
	public Message sendMessage(@DestinationVariable String roomId,@RequestBody MessageRequest request)
	{
		Optional<Room> room = rr.findByRoomId(request.getRoomId());
		Message message = new Message();
		message.setContent(request.getContent());
		message.setSender(request.getSender());
		message.setTimestamp(LocalDateTime.now());
		if(room != null)
		{
			room.getMessages().add(message);
			rr.save(room);
		}
		return message;
	}
}
